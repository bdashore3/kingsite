name: Build and deploy

on:
  push:
    branches: [default]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 12.x
      - name: Set node env
        run: |
          npm config set prefix ~/.npm-global
          export PATH=~/.npm-global/bin:$PATH
          source ~/.profile
          npm install -g yarn
          cd src/nextjs
          yarn install
      - name: Cache Deps
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.npm
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Export next website
        run: |
          cd src/nextjs
          yarn run export
      - name: Build rust backend
        run: |
          ls
          cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
      - name: Zip files
        run: |
          zip kingsite.zip target/debug/website -j
          cd src
          zip -r -u ../kingsite.zip html images
          cd ../
      - name: Push zip to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: kingsite.zip
          target: ~/website
      - name: Unzip and restart service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd website
            unzip -o kingsite.zip
            rm -rf kingsite.zip
            sudo systemctl restart kingsite.service
